pipeline {
    agent any
    
    environment {
        SCANNER_HOME=tool 'SonarQube-Scanner'
        PROJECT_ID='shyamkprj'
        CLIENT_EMAIL='sumit-jenkins-learning@shyamkprj.iam.gserviceaccount.com'
        GCLOUD_CREDS=credentials('gcp-id')
        IMAGE_NAME = 'hello-world'
        DOCKER_IMAGE = ''
      }
    
  tools {
        maven 'Maven'
    }
    
 stages {
       /*   stage('sonarqube-analysis') {
            steps {
                withSonarQubeEnv('SonarQube-server') {
                 sh 'mvn clean verify sonar:sonar \
                      -Dsonar.projectKey=06-HelloWorld-DockerImage-Push-GCP \
                      -Dsonar.host.url=http://34.88.208.170:9000 \
                      -Dsonar.login=sqp_c13007b8bae2a0c234171e2b18175f794e35d2be'
                }
            }
        } */
        
    stage('Test') {
            steps {
                // Define steps for the Test stage
                echo 'Running tests...'
                sh 'pwd'
                sh  'mvn test'
            }
        }
    stage('Build') {
            steps {
                // Define steps for the Build stage
                echo 'Building the project...'
                sh 'mvn clean package'
            }
        }
     
    stage('Docker Build') {
            steps {
                script {
                        sh 'docker build -t europe-north1-docker.pkg.dev/shyamkprj/docker-repo/helloworld .'
                        }
                }
            }
    stage('Docker Push') {
            steps {
                script {
                        sh "gcloud auth configure-docker \
                        europe-north1-docker.pkg.dev"
                        sh 'docker push europe-north1-docker.pkg.dev/shyamkprj/docker-repo/helloworld'
                }
            }
        }
 }
    post {
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
